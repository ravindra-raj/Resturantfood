{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\resturant\\\\client\\\\src\\\\components\\\\ChatApp.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import Sidebar from './Sidebar';\n// import ChatWindow from './ChatWindow';\n// import './ChatApp.css';\n\n// const ChatApp = () => {\n//     const [messages, setMessages] = useState({\n//         'General Chat': [],\n//         'Project Team': [],\n//         'Designers': [],\n//     });\n\n//     const [selectedChat, setSelectedChat] = useState('General Chat');\n//     const [message, setMessage] = useState('');\n\n//     useEffect(() => {\n//         const fetchMessages = () => {\n//             const dummyMessages = [\n//                 { user: 'Alice', text: 'Hello!', time: '10:00 AM' },\n//                 { user: 'Bob', text: 'Hi there!', time: '10:05 AM' },\n//             ];\n//             setMessages((prevMessages) => ({\n//                 ...prevMessages,\n//                 [selectedChat]: dummyMessages, \n//             }));\n//         };\n\n//         fetchMessages();\n//     }, [selectedChat]);\n\n//     const handleSendMessage = () => {\n//         if (message.trim()) {\n//             const newMessage = {\n//                 user: 'You',\n//                 text: message,\n//                 time: new Date().toLocaleTimeString(),\n//             };\n\n//             setMessages((prevMessages) => ({\n//                 ...prevMessages,\n//                 [selectedChat]: [...prevMessages[selectedChat], newMessage],\n//             }));\n//             setMessage('');\n//         }\n//     };\n\n//     return (\n//         <div className=\"chat-app\">\n//             <Sidebar setSelectedChat={setSelectedChat} messages={messages} />\n//             <ChatWindow selectedChat={selectedChat} messages={messages[selectedChat]} />\n//             <div className=\"message-input-container\">\n//                 <input\n//                     type=\"text\"\n//                     placeholder=\"Type a message...\"\n//                     value={message}\n//                     onChange={(e) => setMessage(e.target.value)}\n//                 />\n//                 <button onClick={handleSendMessage}>Send</button>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default ChatApp;\n\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from './Sidebar';\nimport ChatWindow from './ChatWindow';\nimport './ChatApp.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [selectedChat, setSelectedChat] = useState('General Chat');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    fetchMessages();\n  }, [selectedChat]);\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`http://localhost:4000/messages/${selectedChat}`);\n      setMessages(response.data);\n    } catch (error) {\n      console.error(\"Error fetching messages:\", error);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (message.trim()) {\n      const newMessage = {\n        chat_room: selectedChat,\n        user: \"You\",\n        message\n      };\n      try {\n        await axios.post('http://localhost:4000/messages', newMessage);\n        setMessages(prevMessages => [...prevMessages, {\n          ...newMessage,\n          timestamp: new Date()\n        }]);\n        setMessage('');\n        // window.location.reload();\n      } catch (error) {\n        console.error(\"Error sending message:\", error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-app\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      setSelectedChat: setSelectedChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatWindow, {\n      selectedChat: selectedChat,\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"nXn6jRMa18/eN5ylq7ai+ebo8Qs=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","ChatWindow","axios","jsxDEV","_jsxDEV","ChatApp","_s","messages","setMessages","selectedChat","setSelectedChat","message","setMessage","fetchMessages","response","get","data","error","console","handleSendMessage","trim","newMessage","chat_room","user","post","prevMessages","timestamp","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Project/resturant/client/src/components/ChatApp.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import Sidebar from './Sidebar';\r\n// import ChatWindow from './ChatWindow';\r\n// import './ChatApp.css';\r\n\r\n// const ChatApp = () => {\r\n//     const [messages, setMessages] = useState({\r\n//         'General Chat': [],\r\n//         'Project Team': [],\r\n//         'Designers': [],\r\n//     });\r\n\r\n//     const [selectedChat, setSelectedChat] = useState('General Chat');\r\n//     const [message, setMessage] = useState('');\r\n\r\n//     useEffect(() => {\r\n//         const fetchMessages = () => {\r\n//             const dummyMessages = [\r\n//                 { user: 'Alice', text: 'Hello!', time: '10:00 AM' },\r\n//                 { user: 'Bob', text: 'Hi there!', time: '10:05 AM' },\r\n//             ];\r\n//             setMessages((prevMessages) => ({\r\n//                 ...prevMessages,\r\n//                 [selectedChat]: dummyMessages, \r\n//             }));\r\n//         };\r\n\r\n//         fetchMessages();\r\n//     }, [selectedChat]);\r\n\r\n//     const handleSendMessage = () => {\r\n//         if (message.trim()) {\r\n//             const newMessage = {\r\n//                 user: 'You',\r\n//                 text: message,\r\n//                 time: new Date().toLocaleTimeString(),\r\n//             };\r\n\r\n//             setMessages((prevMessages) => ({\r\n//                 ...prevMessages,\r\n//                 [selectedChat]: [...prevMessages[selectedChat], newMessage],\r\n//             }));\r\n//             setMessage('');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"chat-app\">\r\n//             <Sidebar setSelectedChat={setSelectedChat} messages={messages} />\r\n//             <ChatWindow selectedChat={selectedChat} messages={messages[selectedChat]} />\r\n//             <div className=\"message-input-container\">\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     placeholder=\"Type a message...\"\r\n//                     value={message}\r\n//                     onChange={(e) => setMessage(e.target.value)}\r\n//                 />\r\n//                 <button onClick={handleSendMessage}>Send</button>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ChatApp;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport ChatWindow from './ChatWindow';\r\nimport './ChatApp.css';\r\nimport axios from 'axios';\r\n\r\nconst ChatApp = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [selectedChat, setSelectedChat] = useState('General Chat');\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n  }, [selectedChat]);\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:4000/messages/${selectedChat}`);\r\n      setMessages(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching messages:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (message.trim()) {\r\n      const newMessage = { chat_room: selectedChat, user: \"You\", message };\r\n      try {\r\n        await axios.post('http://localhost:4000/messages', newMessage);\r\n        setMessages((prevMessages) => [...prevMessages, { ...newMessage, timestamp: new Date() }]);\r\n        setMessage('');\r\n        // window.location.reload();\r\n      } catch (error) {\r\n        console.error(\"Error sending message:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-app\">\r\n      <Sidebar setSelectedChat={setSelectedChat} />\r\n      <ChatWindow selectedChat={selectedChat} messages={messages} />\r\n      <div className=\"message-input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}